Q1) 

Activity.xml 

<!-- res/layout/activity_main.xml --> 

<?xml version="1.0" encoding="utf-8"?> 

<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android" 

android:layout_width="match_parent" 

android:layout_height="match_parent" 

android:orientation="vertical" 

android:padding="16dp" 

android:gravity="center"> 

 

<!-- RadioGroup for selecting a single option --> 

<RadioGroup 

android:id="@+id/radioGroup" 

android:layout_width="wrap_content" 

android:layout_height="wrap_content" 

android:orientation="vertical" 

android:layout_marginBottom="20dp"> 

 

<RadioButton 

android:id="@+id/radioOption1" 

android:layout_width="wrap_content" 

android:layout_height="wrap_content" 

android:text="Option 1" /> 

 

<RadioButton 

android:id="@+id/radioOption2" 

android:layout_width="wrap_content" 



android:layout_height="wrap_content" 

android:text="Option 2" /> 

 

<RadioButton 

android:id="@+id/radioOption3" 

android:layout_width="wrap_content" 

android:layout_height="wrap_content" 

android:text="Option 3" /> 

 

</RadioGroup> 

 

<!-- Checkboxes for selecting multiple options --> 

<CheckBox 

android:id="@+id/checkBox1" 

android:layout_width="wrap_content" 

android:layout_height="wrap_content" 

android:text="CheckBox 1" /> 

 

<CheckBox 

android:id="@+id/checkBox2" 

android:layout_width="wrap_content" 

android:layout_height="wrap_content" 

android:text="CheckBox 2" /> 

 

<CheckBox 

android:id="@+id/checkBox3" 

android:layout_width="wrap_content" 

android:layout_height="wrap_content" 



android:text="CheckBox 3" /> 

 

<!-- Button to display selected options --> 

<Button 

android:id="@+id/btnShowSelected" 

android:layout_width="wrap_content" 

android:layout_height="wrap_content" 

android:text="Show Selected Options" 

android:layout_marginTop="20dp"/> 

 

</LinearLayout> 

 

Activity.java 

// MainActivity.java 

package com.example.radiobuttoncheckboxdemo; 

 

import android.os.Bundle; 

import android.view.View; 

import android.widget.Button; 

import android.widget.CheckBox; 

import android.widget.RadioButton; 

import android.widget.RadioGroup; 

import android.widget.Toast; 

 

import androidx.appcompat.app.AppCompatActivity; 

 

public class MainActivity extends AppCompatActivity { 

 



private RadioGroup radioGroup; 

private RadioButton selectedRadioButton; 

private CheckBox checkBox1, checkBox2, checkBox3; 

private Button btnShowSelected; 

 

@Override 

protected void onCreate(Bundle savedInstanceState) { 

super.onCreate(savedInstanceState); 

setContentView(R.layout.activity_main); 

 

// Initialize the RadioGroup, RadioButton, CheckBoxes, and Button 

radioGroup = findViewById(R.id.radioGroup); 

checkBox1 = findViewById(R.id.checkBox1); 

checkBox2 = findViewById(R.id.checkBox2); 

checkBox3 = findViewById(R.id.checkBox3); 

btnShowSelected = findViewById(R.id.btnShowSelected); 

 

// Set OnClickListener for the Button 

btnShowSelected.setOnClickListener(new View.OnClickListener() { 

@Override 

public void onClick(View v) { 

// Get the selected RadioButton from the RadioGroup 

int selectedRadioId = radioGroup.getCheckedRadioButtonId(); 

selectedRadioButton = findViewById(selectedRadioId); 

 

String selectedRadioText = "None"; 

if (selectedRadioButton != null) { 

selectedRadioText = selectedRadioButton.getText().toString(); 



} 

 

// Get the selected CheckBox options 

String selectedCheckBoxes = ""; 

if (checkBox1.isChecked()) { 

selectedCheckBoxes += "CheckBox 1, "; 

} 

if (checkBox2.isChecked()) { 

selectedCheckBoxes += "CheckBox 2, "; 

} 

if (checkBox3.isChecked()) { 

selectedCheckBoxes += "CheckBox 3, "; 

} 

 

// Remove the trailing comma and space 

if (selectedCheckBoxes.length() > 0) { 

selectedCheckBoxes = selectedCheckBoxes.substring(0, selectedCheckBoxes.length() - 2); 

} else { 

selectedCheckBoxes = "None"; 

} 

 

// Display the selected options in a Toast message 

String message = "Selected Radio Option: " + selectedRadioText + "\n" + 

"Selected CheckBoxes: " + selectedCheckBoxes; 

Toast.makeText(MainActivity.this, message, Toast.LENGTH_LONG).show(); 

} 

}); 

} 



} 

 

Manifest file 

<manifest xmlns:android="http://schemas.android.com/apk/res/android" 

package="com.example.radiobuttoncheckboxdemo"> 

 

<application 

android:allowBackup="true" 

android:icon="@mipmap/ic_launcher" 

android:label="RadioButton & CheckBox Demo" 

android:theme="@style/Theme.AppCompat.Light.DarkActionBar"> 

 

<activity android:name=".MainActivity"> 

<intent-filter> 

<action android:name="android.intent.action.MAIN" /> 

<category android:name="android.intent.category.LAUNCHER" /> 

</intent-filter> 

</activity> 

 

</application> 

</manifest> 

 

 

 

 

 

 

Q2) 



Activity.xml 

<!-- res/layout/activity_main.xml --> 

<?xml version="1.0" encoding="utf-8"?> 

<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android" 

android:layout_width="match_parent" 

android:layout_height="match_parent" 

android:orientation="vertical" 

android:padding="16dp" 

android:gravity="center"> 

 

<TextView 

android:id="@+id/latitudeText" 

android:layout_width="wrap_content" 

android:layout_height="wrap_content" 

android:text="Latitude: " 

android:textSize="18sp" /> 

 

<TextView 

android:id="@+id/longitudeText" 

android:layout_width="wrap_content" 

android:layout_height="wrap_content" 

android:text="Longitude: " 

android:textSize="18sp" /> 

 

<Button 

android:id="@+id/getLocationButton" 

android:layout_width="wrap_content" 

android:layout_height="wrap_content" 



android:text="Get Current Location" 

android:layout_marginTop="20dp" /> 

 

</LinearLayout> 

 

 

 

Activity.java 

// MainActivity.java 

package com.example.locationdemo; 

 

import android.Manifest; 

import android.content.pm.PackageManager; 

import android.location.Location; 

import android.os.Bundle; 

import android.widget.Button; 

import android.widget.TextView; 

import android.widget.Toast; 

 

import androidx.appcompat.app.AppCompatActivity; 

import androidx.core.app.ActivityCompat; 

import androidx.core.content.ContextCompat; 

 

import com.google.android.gms.location.FusedLocationProviderClient; 

import com.google.android.gms.location.LocationServices; 

import com.google.android.gms.tasks.OnSuccessListener; 

 

public class MainActivity extends AppCompatActivity { 



 

private static final int REQUEST_LOCATION_PERMISSION = 1; 

 

private FusedLocationProviderClient fusedLocationClient; 

private TextView latitudeText, longitudeText; 

private Button getLocationButton; 

 

@Override 

protected void onCreate(Bundle savedInstanceState) { 

super.onCreate(savedInstanceState); 

setContentView(R.layout.activity_main); 

 

// Initialize the UI components 

latitudeText = findViewById(R.id.latitudeText); 

longitudeText = findViewById(R.id.longitudeText); 

getLocationButton = findViewById(R.id.getLocationButton); 

 

// Initialize the FusedLocationProviderClient 

fusedLocationClient = LocationServices.getFusedLocationProviderClient(this); 

 

// Set up the click listener for the button 

getLocationButton.setOnClickListener(v -> getCurrentLocation()); 

} 

 

private void getCurrentLocation() { 

// Check if permission is granted 

if (ContextCompat.checkSelfPermission(this, Manifest.permission.ACCESS_FINE_LOCATION) 

!= PackageManager.PERMISSION_GRANTED) { 



// Request permission if not granted 

ActivityCompat.requestPermissions(this, new 
String[]{Manifest.permission.ACCESS_FINE_LOCATION}, 

REQUEST_LOCATION_PERMISSION); 

} else { 

// Get the last known location 

fusedLocationClient.getLastLocation() 

.addOnSuccessListener(this, new OnSuccessListener<Location>() { 

@Override 

public void onSuccess(Location location) { 

if (location != null) { 

// Display latitude and longitude 

latitudeText.setText("Latitude: " + location.getLatitude()); 

longitudeText.setText("Longitude: " + location.getLongitude()); 

} else { 

Toast.makeText(MainActivity.this, "Location not available", Toast.LENGTH_SHORT).show(); 

} 

} 

}); 

} 

} 

 

// Handle permission request results 

@Override 

public void onRequestPermissionsResult(int requestCode, String[] permissions, int[] 
grantResults) { 

super.onRequestPermissionsResult(requestCode, permissions, grantResults); 

if (requestCode == REQUEST_LOCATION_PERMISSION) { 

if (grantResults.length > 0 && grantResults[0] == PackageManager.PERMISSION_GRANTED) { 



// Permission granted, fetch the location 

getCurrentLocation(); 

} else { 

// Permission denied 

Toast.makeText(this, "Permission denied to access location", Toast.LENGTH_SHORT).show(); 

} 

} 

} 

} 

 

 

 

Manifest File- 

<manifest xmlns:android="http://schemas.android.com/apk/res/android" 

package="com.example.locationdemo"> 

 

<application 

android:allowBackup="true" 

android:icon="@mipmap/ic_launcher" 

android:label="Location Demo" 

android:theme="@style/Theme.AppCompat.Light.DarkActionBar"> 

 

<!-- Requesting location permissions --> 

<uses-permission android:name="android.permission.ACCESS_FINE_LOCATION"/> 

<uses-permission android:name="android.permission.ACCESS_COARSE_LOCATION"/> 

 

<activity android:name=".MainActivity"> 

<intent-filter> 



<action android:name="android.intent.action.MAIN" /> 

<category android:name="android.intent.category.LAUNCHER" /> 

</intent-filter> 

</activity> 

 

</application> 

</manifest> 

 

 

 

--------------------------- ADD TO Build.gradle file --------------------- 

dependencies { 

// Google Play services Location library 

implementation 'com.google.android.gms:play-services-location:18.0.0' 

 

// Other dependencies (e.g., appcompat, material design, etc.) 

implementation 'androidx.appcompat:appcompat:1.3.1' 

implementation 'com.google.android.material:material:1.4.0' 

// Add other necessary dependencies here 

}